// Full Adder in Verilog
module full_adder (
    input a, b, cin,
    output sum, cout
);
    assign sum = a ^ b ^ cin;
    assign cout = (a & b) | (b & cin) | (a & cin);
endmodule

// Testbench for Full Adder
`timescale 1ns/1ps
module full_adder_tb;
    reg a, b, cin;
    wire sum, cout;

    // Instantiate the Unit Under Test (UUT)
    full_adder uut (a, b, cin, sum, cout);

    initial begin        
        a=0; b=0; cin=0; #5;
        a=0; b=0; cin=1; #5;
        a=0; b=1; cin=0; #5;
        a=0; b=1; cin=1; #5;
        a=1; b=0; cin=0; #5;
        a=1; b=0; cin=1; #5;
        a=1; b=1; cin=0; #5;
        a=1; b=1; cin=1; #5;

        $finish;
    end
     initial begin
        $monitor("a=%b b=%b cin=%b | sum=%b cout=%b", a, b, cin, sum, cout);
    end
endmodule
